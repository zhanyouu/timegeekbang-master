<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="75af6b31-c28b-43e9-89dd-6801d65e3654" name="Default Changelist" comment="7">
      <change afterPath="$PROJECT_DIR$/.idea/jike.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/00丨开篇词丨一对一的设计与编码集训，让你告别没有成长的烂代码！.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/01丨为什么说每个程序员都要尽早地学习并掌握设计模式相关知识？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/02丨从哪些维度评判代码质量的好坏？如何具备写出高质量代码的能力？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/03丨面向对象、设计原则、设计模式、编程规范、重构，这五者有何关系？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/04丨理论一：当谈论面向对象的时候，我们到底在谈论什么？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/05丨理论二：封装、抽象、继承、多态分别可以解决哪些编程问题？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/06丨理论三：面向对象相比面向过程有哪些优势？面向过程真的过时了吗？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/07丨理论四：哪些代码设计看似是面向对象，实际是面向过程的？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/08丨理论五：接口vs抽象类的区别？如何用普通的类模拟抽象类和接口？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/09丨理论六：为什么基于接口而非实现编程？有必要为每个类都定义接口吗？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/100丨如何将设计思想、原则、模式等理论知识应用到项目中？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/10丨理论七：为何说要多用组合少用继承？如何决定该用组合还是继承？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/11丨实战一（上）：业务开发常用的基于贫血模型的MVC架构违背OOP吗？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/12丨实战一（下）：如何利用基于充血模型的DDD开发一个虚拟钱包系统？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/13丨实战二（上）：如何对接口鉴权这样一个功能开发做面向对象分析？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/14丨实战二（下）：如何利用面向对象设计和编程开发接口鉴权功能？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/15丨理论一：对于单一职责原则，如何判定某个类的职责是否够“单一”？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/16丨理论二：如何做到“对扩展开放、修改关闭”？扩展和修改各指什么？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/17丨理论三：里式替换（LSP）跟多态有何区别？哪些代码违背了LSP？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/18丨理论四：接口隔离原则有哪三种应用？原则中的“接口”该如何理解？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/19丨理论五：控制反转、依赖反转、依赖注入，这三者有何区别和联系？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/20丨理论六：我为何说KISS、YAGNI原则看似简单，却经常被用错？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/21丨理论七：重复的代码就一定违背DRY吗？如何提高代码的复用性？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/22丨理论八：如何用迪米特法则（LOD）实现“高内聚、松耦合”？ .html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/23丨实战一（上）：针对业务系统的开发，如何做需求分析和设计？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/24丨实战一（下）：如何实现一个遵从设计原则的积分兑换系统？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/25丨实战二（上）：针对非业务的通用框架开发，如何做需求分析和设计？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/26丨实战二（下）：如何实现一个支持各种统计规则的性能计数器？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/27丨理论一：什么情况下要重构？到底重构什么？又该如何重构？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/28丨理论二：为了保证重构不出错，有哪些非常能落地的技术手段？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/29丨理论三：什么是代码的可测试性？如何写出可测试性好的代码？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/30丨理论四：如何通过封装、抽象、模块化、中间层等解耦代码？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/31丨理论五：让你最快速地改善代码质量的20条编程规范（上）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/32丨 理论五：让你最快速地改善代码质量的20条编程规范（中）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/33丨 理论五：让你最快速地改善代码质量的20条编程规范（下）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/34丨 实战一（上）：通过一段ID生成器代码，学习如何发现代码质量问题.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/35丨 实战一（下）：手把手带你将ID生成器代码从“能用”重构为“好用”.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/36丨 实战二（上）：程序出错该返回啥？NULL、异常、错误码、空对象？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/37丨 实战二（下）：重构ID生成器项目中各函数的异常处理代码.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/38丨 总结回顾面向对象、设计原则、编程规范、重构技巧等知识点.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/39丨 运用学过的设计原则和思想完善之前讲的性能计数器项目（上）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/40丨运用学过的设计原则和思想完善之前讲的性能计数器项目（下）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/41丨单例模式（上）：为什么说支持懒加载的双重检测不比饿汉式更优？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/42丨单例模式（中）：我为什么不推荐使用单例模式？又有何替代方案？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/43丨单例模式（下）：如何设计实现一个集群环境下的分布式单例模式？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/44丨工厂模式（上）：我为什么说没事不要随便用工厂模式创建对象？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/45丨工厂模式（下）：如何设计实现一个DependencyInjection框架？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/46丨建造者模式：详解构造函数、set方法、建造者模式三种对象创建方式.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/47丨原型模式：如何最快速地clone一个HashMap散列表？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/48丨代理模式：代理在RPC、缓存、监控等场景中的应用.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/49丨桥接模式：如何实现支持不同类型和渠道的消息推送系统？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/50丨装饰器模式：通过剖析JavaIO类库源码学习装饰器模式.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/51丨适配器模式：代理、适配器、桥接、装饰，这四个模式有何区别？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/52丨门面模式：如何设计合理的接口粒度以兼顾接口的易用性和通用性？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/53丨组合模式：如何设计实现支持递归遍历的文件系统目录树结构？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/54丨享元模式（上）：如何利用享元模式优化文本编辑器的内存占用？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/55丨享元模式（下）：剖析享元模式在JavaInteger、String中的应用.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/56丨观察者模式（上）：详解各种应用场景下观察者模式的不同实现方式.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/57丨观察者模式（下）：如何实现一个异步非阻塞的EventBus框架？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/58丨模板模式（上）：剖析模板模式在JDK、Servlet、JUnit等中的应用.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/59丨模板模式（下）：模板模式与Callback回调函数有何区别和联系？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/60丨策略模式（上）：如何避免冗长的if-else-switch分支判断代码？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/61丨策略模式（下）：如何实现一个支持给不同大小文件排序的小程序？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/62丨职责链模式（上）：如何实现可灵活扩展算法的敏感信息过滤框架？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/63丨职责链模式（下）：框架中常用的过滤器、拦截器是如何实现的？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/64丨状态模式：游戏、工作流引擎中常用的状态机是如何实现的？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/65丨迭代器模式（上）：相比直接遍历集合数据，使用迭代器有哪些优势？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/66丨迭代器模式（中）：遍历集合的同时，为什么不能增删集合元素？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/67丨迭代器模式（下）：如何设计实现一个支持“快照”功能的iterator？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/68丨访问者模式（上）：手把手带你还原访问者模式诞生的思维过程.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/69丨访问者模式（下）：为什么支持双分派的语言不需要访问者模式？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/70丨备忘录模式：对于大对象的备份和恢复，如何优化内存和时间的消耗？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/71丨命令模式：如何利用命令模式实现一个手游后端架构？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/72丨解释器模式：如何设计实现一个自定义接口告警规则功能？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/73丨中介模式：什么时候用中介模式？什么时候用观察者模式？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/74丨总结回顾23种经典设计模式的原理、背后的思想、应用场景等.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/75丨在实际的项目开发中，如何避免过度设计？又如何避免设计不足？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/76丨开源实战一（上）：通过剖析JavaJDK源码学习灵活应用设计模式.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/77丨开源实战一（下）：通过剖析JavaJDK源码学习灵活应用设计模式.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/78丨开源实战二（上）：从Unix开源开发学习应对大型复杂项目开发.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/79丨开源实战二（中）：从Unix开源开发学习应对大型复杂项目开发.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/80丨开源实战二（下）：从Unix开源开发学习应对大型复杂项目开发.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/81丨开源实战三（上）：借GoogleGuava学习发现和开发通用功能模块.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/82丨开源实战三（中）：剖析GoogleGuava中用到的几种设计模式.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/83丨开源实战三（下）：借GoogleGuava学习三大编程范式中的函数式编程.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/84丨开源实战四（上）：剖析Spring框架中蕴含的经典设计思想或原则.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/85丨开源实战四（中）：剖析Spring框架中用来支持扩展的两种设计模式.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/86丨开源实战四（下）：总结Spring框架用到的11种设计模式.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/87丨开源实战五（上）：MyBatis如何权衡易用性、性能和灵活性？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/88丨开源实战五（中）：如何利用职责链与代理模式实现MyBatisPlugin？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/89丨开源实战五（下）：总结MyBatis框架中用到的10种设计模式.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/90丨项目实战一：设计实现一个支持各种算法的限流框架（分析）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/91丨项目实战一：设计实现一个支持各种算法的限流框架（设计）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/92丨项目实战一：设计实现一个支持各种算法的限流框架（实现）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/93丨项目实战二：设计实现一个通用的接口幂等框架（分析）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/94丨项目实战二：设计实现一个通用的接口幂等框架（设计）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/95丨项目实战二：设计实现一个通用的接口幂等框架（实现）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/96丨项目实战三：设计实现一个支持自定义规则的灰度发布组件（分析）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/97丨项目实战三：设计实现一个支持自定义规则的灰度发布组件（设计）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/98丨项目实战三：设计实现一个支持自定义规则的灰度发布组件（实现）.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/99丨总结回顾：在实际软件开发中常用的设计思想、原则和模式.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/加餐一丨用一篇文章带你了解专栏中用到的所有Java语法.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/加餐七丨基础学科的知识如何转化成实际的技术生产力？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/加餐三丨聊一聊Google是如何做CodeReview的.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/加餐九丨作为面试官或候选人，如何面试或回答设计模式问题？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/加餐二丨设计模式、重构、编程规范等相关书籍推荐.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/加餐五丨听一听小争哥对Google工程师文化的解读.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/加餐八丨程序员怎么才能让自己走得更高、更远？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/加餐六丨什么才是所谓的编程能力？如何考察一个人的编程能力？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/加餐十丨如何接手一坨烂业务代码？如何在烂业务代码中成长？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/加餐四丨聊一聊Google那些让我快速成长的地方.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/春节特别加餐丨 王争：如何学习《设计模式之美》专栏？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/设计模式之美/结束语丨聊一聊机遇、方向、能力、努力！.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/00丨开篇词丨为什么你要学习高并发系统设计？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/01丨高并发系统：它的通用设计方法是什么？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/02丨架构分层：我们为什么一定要这么做？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/03丨系统设计目标（一）：如何提升系统性能？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/04丨系统设计目标（二）：系统怎样做到高可用？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/05丨系统设计目标（三）：如何让系统易于扩展？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/06丨面试现场第一期：当问到组件实现原理时，面试官是在刁难你吗？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/07丨池化技术：如何减少频繁创建数据库连接的性能损耗？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/08丨数据库优化方案（一）：查询请求增加时，如何做主从分离？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/09丨数据库优化方案（二）：写入数据量增加时，如何实现分库分表？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/10丨发号器：如何保证分库分表后ID的全局唯一性？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/11丨NoSQL：在高并发场景下，数据库和NoSQL如何做到互补？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/12丨缓存：数据库成为瓶颈后，动态数据的查询要如何加速？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/13丨缓存的使用姿势（一）：如何选择缓存的读写策略？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/14丨缓存的使用姿势（二）：缓存如何做到高可用？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/15丨缓存的使用姿势（三）：缓存穿透了怎么办？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/16丨CDN：静态资源如何加速？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/21丨系统架构：每秒1万次请求的系统要做服务化拆分吗？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/22丨微服务架构：微服务化后，系统架构要如何改造？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/23丨RPC框架：10万QPS下如何实现毫秒级的服务调用？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/24丨注册中心：分布式系统如何寻址？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/25丨分布式Trace：横跨几十个分布式组件的慢请求要如何排查？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/26丨负载均衡：怎样提升系统的横向扩展能力？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/27丨API网关：系统的门面要如何做呢？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/28丨多机房部署：跨地域的分布式系统如何做？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/29丨ServiceMesh：如何屏蔽服务化系统的服务治理细节？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/30丨给系统加上眼睛：服务端监控要怎么做？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/31丨应用性能管理：用户的使用体验应该如何监控？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/32丨压力测试：怎样设计全链路压力测试平台？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/33丨配置管理：成千上万的配置项要如何管理？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/34丨降级熔断：如何屏蔽非核心系统故障的影响？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/35丨流量控制：高并发系统中我们如何操纵流量？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/36丨面试现场第三期：你要如何准备一场技术面试呢？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/37丨计数系统设计（一）：面对海量数据的计数器要如何做？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/38丨计数系统设计（二）：50万QPS下如何设计未读数系统？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/39丨信息流设计（一）：通用信息流系统的推模式要如何做？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/40丨信息流设计（二）：通用信息流系统的拉模式要如何做？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/加餐丨数据的迁移应该如何做？.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/study/高并发系统设计40问/结束语丨学不可以已.html" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="2UFepElDdDZRlc2has1echPuWvp" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="foldersAlwaysOnTop" value="false" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
  </component>
  <component name="RunManager">
    <configuration default="true" type="ArquillianTestNG" factoryName="" nameIsGenerated="true">
      <option name="arquillianRunConfiguration">
        <value>
          <option name="containerStateName" value="" />
        </value>
      </option>
      <option name="TEST_OBJECT" value="CLASS" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="75af6b31-c28b-43e9-89dd-6801d65e3654" name="Default Changelist" comment="" />
      <created>1692539936535</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1692539936535</updated>
      <workItem from="1692539937734" duration="870000" />
      <workItem from="1692545674652" duration="662000" />
      <workItem from="1692547961926" duration="4352000" />
      <workItem from="1693925968027" duration="2367000" />
    </task>
    <task id="LOCAL-00001" summary="1">
      <created>1693927207982</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1693927207983</updated>
    </task>
    <task id="LOCAL-00002" summary="2">
      <created>1693927311461</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1693927311461</updated>
    </task>
    <task id="LOCAL-00003" summary="3">
      <created>1693927454922</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1693927454922</updated>
    </task>
    <task id="LOCAL-00004" summary="4">
      <created>1693927991331</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1693927991331</updated>
    </task>
    <task id="LOCAL-00005" summary="5">
      <created>1693928238496</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1693928238496</updated>
    </task>
    <task id="LOCAL-00006" summary="6">
      <created>1693928335631</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1693928335631</updated>
    </task>
    <task id="LOCAL-00007" summary="7">
      <created>1693928547802</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1693928547802</updated>
    </task>
    <option name="localTasksCounter" value="8" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="init" />
    <MESSAGE value="1" />
    <MESSAGE value="2" />
    <MESSAGE value="3" />
    <MESSAGE value="4" />
    <MESSAGE value="5" />
    <MESSAGE value="6" />
    <MESSAGE value="7" />
    <option name="LAST_COMMIT_MESSAGE" value="7" />
  </component>
</project>